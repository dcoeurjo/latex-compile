#!/usr/bin/env python


import glob,os, re, sys

def try_remove(filename):
    if os.path.exists(filename):
        print("deleting "+filename)
        os.unlink(filename)

suffixes=['aux', 'bcf', 'bbl', 'blg', 'brf', 'dvi', 'fls',
          'fdb_latexmk', 'log','maf', 'mtc', 'mtc0', 'nav', 'out',
          'ps', 'pdf', 'pdfsync', 'pyg', 'run.xml', 'snm',
          'synctex.gz', 'synctex.gz(busy)', 'tex~', 'bib~', 'snm',
          'toc', 'vrb']
        
if len(sys.argv)>1 and sys.argv[1] == '--keep-pdf':
    suffixes.remove('pdf')

for document in glob.glob("*.tex"):
    document=document.replace('.tex','')
    for filename in [ document+'.'+suffix for suffix in suffixes ]:
        try_remove(filename)
        
    # biblatex
    try_remove(document+'-blx.bib')

    for slide in range(0,50):
        try_remove(document+'.'+str(slide)+'.vrb')

for filename in ['texput.log','missingfonts.log','missfont.log','.figanim-generated-files']:
    try_remove(filename)

    
for filename in glob.glob('*.pdftex'):#+glob.glob('fig/*.pdftex'):
    fig=re.sub(r'(\+[0-9,]+)?\.pdftex','.fig',filename)
    if os.path.exists(fig):
        try_remove(filename)
        try_remove(filename+'_t')

for filename in glob.glob('*.eps'):
    fig=re.sub(r'.eps','.fig',filename)
    if os.path.exists(fig):
        try_remove(filename)

for filename in glob.glob('*.pdf')+glob.glob('*/*.pdf'):
    fig=re.sub(r'.pdf','.eps',filename)
    if os.path.exists(fig):
        try_remove(filename)

for filename in glob.glob('*-eps-converted-to.pdf')+glob.glob('*/*converted-to.pdf'):
    fig=re.sub(r'-eps-converted-to.pdf','.eps',filename)
    if os.path.exists(fig):
        try_remove(filename)


for filename in glob.glob('*.pdf'):#+glob.glob('fig/*.pdftex'):
    fig=re.sub(r'(\+[0-9,]+)?\.pdf','.fig',filename)
    if os.path.exists(fig):
        try_remove(filename)
        try_remove(filename+'_t')


